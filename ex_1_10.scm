(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1) (A x (- y 1))))))

(A 1 10)
(A 2 4)
(A 3 3)

(define (f n) (A 0 n))
;; f(n) = 2n
(f 1) ;; => 2
(f 12) ;; => 24
(f 313) ;; => 626


(define (g n) (A 1 n))
;; g(n) = 2^n
(g 1) ;; => 2
(g 2) ;; => 4
(g 3) ;; => 8
(g 4) ;; => 16
(g 5) ;; => 32
(g 32) ;; => 4294967296

(define (h n) (A 2 n))
;; h(n) = 2^2^2...(n - 1) times
(h 1) ;; 2^1 => 2
(h 2) ;; 2^2 => 4
(h 3) ;; 2^4 => 16
(h 4) ;; 2^16 => 65536
;; (h 5) ;; => maximum recursice depth exceeded

;; Let's look at (h 3) in more detail
;; (h 3)
;; (A (- 2 1) (A 2 (- y 1)))
;; (A 1 (A 2 2))
;; (A 1 (A 1 (A 2 1)))
;; (A 1 (A 1 2))
;; (A 1 (A 0 (A 1 1)))
;; (A 1 (A 0 2))
;; (A 1 (* 2 2))
;; (A 1 4)
;; (A 0 (A 1 3))
;; (A 0 (A 0 (A 1 2)))
;; (A 0 (A 0 (A 0 (A 1 1))))
;; (A 0 (A 0 (A 0 2)))
;; (A 0 (A 0 (* 2 2)))
;; (A 0 (A 0 4))
;; (A 0 (* 2 4))
;; (A 0 8)
;; (* 2 8)
;; 16
